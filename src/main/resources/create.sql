create table if not exists roles (id serial primary key, name varchar(255) not null, created_on integer not null, updated_on integer);
create table if not exists users (id serial primary key, first_name varchar(255) not null, last_name varchar(255) not null, job_title varchar(255), email varchar(255) unique not null, role_id integer references roles(id), password varchar(255) not null, direct_supervisor_id integer references users(id), department_head_id integer references users(id), created_on integer not null, updated_on integer);
create table if not exists event_types (id serial primary key, name varchar(255), percentage integer check (percentage > 0 and percentage <= 100), created_on integer not null, updated_on integer);
create table if not exists grading_formats (id serial primary key, format varchar(255) not null, description text, created_on integer not null, updated_on integer);
create table if not exists statuses (id serial primary key, status varchar(255), description text, created_on integer not null, updated_on integer);
create table if not exists events (id serial primary key, event_type_id integer references event_types(id), datetime integer not null, location varchar(255) not null, description text, justification text not null, cost integer not null, grading_format integer references grading_formats(id), passing_grade_cutoff varchar(255) not null, completed_on integer, status_id integer references statuses(id), attachment bytea, created_on integer not null, updated_on integer);
create table if not exists reimbursements (id serial primary key, employee_id integer references users(id), event_id integer references events(id), direct_supervisor_approved_on integer, direct_supervisor_auto_approved boolean, department_head_approved_on integer, department_head_auto_approved boolean, benco_approved_on integer, denied_on integer, denied_reason text, created_on integer not null, updated_on integer);
insert into grading_formats (format, description, created_on) values ('GPA', 'A scale from 0 to 4', extract(epoch from now())), ('Letter', 'Can be A, B, C, D, F', extract(epoch from now())), ('100', 'A score from 0 to 100', extract(epoch from now())), ('Pass/Fail', 'A student either passes or fails', extract(epoch from now())), ('Presentation', 'A presentation will determine satisfactory knowledge', extract(epoch from now()));
insert into roles (name, created_on) values ('Benefits Coordinator', extract(epoch from now())), ('Employee', extract(epoch from now())), ('Supervisor', extract(epoch from now())), ('Department Head', extract(epoch from now())), ('Officer', extract(epoch from now()));
insert into event_types (name, percentage, created_on) values ('University Course', 80, extract(epoch from now())), ('Seminar', 60, extract(epoch from now())), ('Certification Preparation', 75, extract(epoch from now())), ('Certification', 100, extract(epoch from now())), ('Technical Training', 90, extract(epoch from now())), ('Other', 30, extract(epoch from now()));
insert into statuses (status, created_on) values ('Applied',  extract(epoch from now())), ('Supervisor Approved', extract(epoch from now())), ('Department Head Approved', extract(epoch from now())), ('Approved', extract(epoch from now())), ('In Progress', extract(epoch from now())), ('Pass', extract(epoch from now())), ('Fail', extract(epoch from now())), ('BenCo Approved', extract(epoch from now())), ('Denied', extract(epoch from now()));
insert into users (first_name, last_name, job_title, email, role_id, password, created_on) values ('first', 'last', 'title', 'email@email.com', 1, 'secret', extract(epoch from now()));